
package com.java.ws.client;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.4-b01 Generated
 * source version: 2.2
 * 
 */
@WebServiceClient(name = "WSSecurityService", targetNamespace = "http://security.ws.java.com/", wsdlLocation = "https://127.0.0.1:8443/WSWebSecurity/securehello?wsdl")
public class WSSecurityService extends Service {

	private final static URL WSSECURITYSERVICE_WSDL_LOCATION;
	private final static WebServiceException WSSECURITYSERVICE_EXCEPTION;
	private final static QName WSSECURITYSERVICE_QNAME = new QName("http://security.ws.java.com/",
	                                                               "WSSecurityService");

	static {
		URL url = null;
		WebServiceException e = null;
		try {
			url = new URL("http://127.0.0.1:8080/WSWebSecurity/securehello?wsdl");
		} catch (MalformedURLException ex) {
			e = new WebServiceException(ex);
		}
		WSSECURITYSERVICE_WSDL_LOCATION = url;
		WSSECURITYSERVICE_EXCEPTION = e;
	}

	public WSSecurityService() {
		super(WSSecurityService.__getWsdlLocation(),
		      WSSecurityService.WSSECURITYSERVICE_QNAME);
	}

	public WSSecurityService(final WebServiceFeature... features) {
		super(WSSecurityService.__getWsdlLocation(),
		      WSSecurityService.WSSECURITYSERVICE_QNAME,
		      features);
	}

	public WSSecurityService(final URL wsdlLocation) {
		super(wsdlLocation,
		      WSSecurityService.WSSECURITYSERVICE_QNAME);
	}

	public WSSecurityService(final URL wsdlLocation, final WebServiceFeature... features) {
		super(wsdlLocation,
		      WSSecurityService.WSSECURITYSERVICE_QNAME,
		      features);
	}

	public WSSecurityService(final URL wsdlLocation, final QName serviceName) {
		super(wsdlLocation,
		      serviceName);
	}

	public WSSecurityService(final URL wsdlLocation, final QName serviceName, final WebServiceFeature... features) {
		super(wsdlLocation,
		      serviceName,
		      features);
	}

	/**
	 * 
	 * @return returns WSSecurity
	 */
	@WebEndpoint(name = "WSSecurityPort")
	public WSSecurity getWSSecurityPort() {
		return super.getPort(new QName("http://security.ws.java.com/",
		                               "WSSecurityPort"),
		                     WSSecurity.class);
	}

	/**
	 * 
	 * @param features
	 *            A list of {@link javax.xml.ws.WebServiceFeature} to configure on
	 *            the proxy. Supported features not in the <code>features</code>
	 *            parameter will have their default values.
	 * @return returns WSSecurity
	 */
	@WebEndpoint(name = "WSSecurityPort")
	public WSSecurity getWSSecurityPort(final WebServiceFeature... features) {
		return super.getPort(new QName("http://security.ws.java.com/",
		                               "WSSecurityPort"),
		                     WSSecurity.class,
		                     features);
	}

	private static URL __getWsdlLocation() {
		if (WSSecurityService.WSSECURITYSERVICE_EXCEPTION != null) {
			throw WSSecurityService.WSSECURITYSERVICE_EXCEPTION;
		}
		return WSSecurityService.WSSECURITYSERVICE_WSDL_LOCATION;
	}

}
